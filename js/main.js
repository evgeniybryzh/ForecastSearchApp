!function(){"use strict";document.getElementById("video").playbackRate=.4,function(){const e=document.getElementById("burger"),t=e.children,n=document.getElementById("burger-menu"),d=document.getElementById("first-stripe"),i=document.getElementById("second-stripe"),o=document.getElementById("third-stripe"),s=document.getElementById("menu-list");let m=-40,c=40,r=90;function a(){n.style.display="none"}function u(){m=-40,c=40,n.style.top=m+"px",n.style.right=c+"px"}function l(){if(-40==r)return r=90;n.style.top=(r-=5)+"px",setTimeout(l,1)}function g(){l(),setTimeout(a,50),setTimeout(u,500)}function y(){if(n.style.display="flex",360==c)return!0;m<90&&40==c&&(n.style.top=(m+=10)+"px"),90==m&&c<360&&(n.style.right=(c+=10)+"px"),setTimeout(y,5)}function p(){d.classList.remove("pushed"),i.classList.remove("pushed"),o.classList.remove("pushed")}document.addEventListener("click",n=>{n.target!==e&&n.target!==t[0]&&n.target!==t[1]&&n.target!==t[2]||("pushed"==d.classList[1]?(p(),g()):(d.classList.add("pushed"),i.classList.add("pushed"),o.classList.add("pushed"),y())),n.target!==s.children[0]&&n.target!==s.children[1]&&n.target!==s.children[2]&&n.target!==s.children[3]||(g(),p())})}(),function(){const e=document.getElementById("sunny"),t=document.getElementById("rainy"),n=document.getElementById("foggy"),d=document.getElementById("thunder"),i=(document.getElementById("video-source"),document.getElementById("video"));document.addEventListener("click",o=>{o.target==e&&(i.src="images/sunny.mp4"),o.target==t&&(i.src="images/rainy.mp4"),o.target==n&&(i.src="images/foggy.mp4"),o.target==d&&(i.src="images/thunder.mp4")})}(),function(){const e="d6e7fd6926ec77363ffce0e10bfe83b3",t=(document.getElementById("cards"),document.getElementById("cards-info"),document.getElementById("info-details"),document.getElementById("info-title"),document.getElementById("input")),n=(document.getElementsByClassName("info__daily-info"),document.getElementById("button")),d=document.getElementById("search-icon"),i=t=>{var n;t&&fetch((n=t,`http://api.openweathermap.org/data/2.5/weather?q=${n}&units=celsius&appid=${e}`)).then(e=>e.json()).then(e=>{(e=>{const t=document.getElementById("city-name"),n=e.name,d=e.sys.country,i=document.getElementById("temperature"),o=Math.round(e.main.temp-273.15),s=document.getElementById("humidity-info"),m=e.main.humidity,c=document.getElementById("pressure-info"),r=e.main.pressure,a=(e.weather[0].main,document.getElementById("wind-dir-info")),u=e.wind.deg,l=document.getElementById("wind-speed-info"),g=e.wind.speed,y=document.getElementById("weather-icon-big"),p=`https://openweathermap.org/img/wn/${e.weather[0].icon}@2x.png`;t.innerText=`${n}, ${d}`,null==d&&(t.innerText=""+n),i.innerHTML=o+" &deg;",y.setAttribute("src",p),s.innerText=`Humidity:  ${m}%`,c.innerText=`Pressure: ${r} hPa`,a.innerText=`Wind Direction: ${u} deg`,l.innerText=`Wind Speed: ${g} mps`})(e)}).catch(e=>{console.log(e);document.getElementById("city-name").innerText=`"${t}" - is wrong City name!`})},o=t=>{var n;t&&fetch((n=t,`http://api.openweathermap.org/data/2.5/forecast?q=${n}&units=celsius&appid=${e}`)).then(e=>e.json()).then(e=>{console.log(e)}).catch(e=>{console.log(e);document.getElementById("city-name").innerText=`"${t}" - is wrong City name!`})};document.addEventListener("click",e=>{e.target!=n&&e.target!=d||(i(t.value.toLowerCase()),o(t.value.toLowerCase()))}),document.addEventListener("keypress",e=>{e.target==t&&"Enter"==e.code&&(i(t.value.toLowerCase()),o(t.value.toLowerCase()))})}()}();

//# sourceMappingURL=data:application/json;charset=utf8;base64,

!function(){"use strict";document.getElementById("video").playbackRate=.4,function(){const e=document.getElementById("burger"),t=e.children,n=document.getElementById("burger-menu"),d=document.getElementById("first-stripe"),i=document.getElementById("second-stripe"),o=document.getElementById("third-stripe"),s=document.getElementById("menu-list");let m=-40,c=40,r=90;function a(){n.style.display="none"}function u(){m=-40,c=40,n.style.top=m+"px",n.style.right=c+"px"}function l(){if(-40==r)return r=90;n.style.top=(r-=5)+"px",setTimeout(l,1)}function g(){l(),setTimeout(a,50),setTimeout(u,500)}function y(){if(n.style.display="flex",360==c)return!0;m<90&&40==c&&(n.style.top=(m+=10)+"px"),90==m&&c<360&&(n.style.right=(c+=10)+"px"),setTimeout(y,5)}function p(){d.classList.remove("pushed"),i.classList.remove("pushed"),o.classList.remove("pushed")}document.addEventListener("click",n=>{n.target!==e&&n.target!==t[0]&&n.target!==t[1]&&n.target!==t[2]||("pushed"==d.classList[1]?(p(),g()):(d.classList.add("pushed"),i.classList.add("pushed"),o.classList.add("pushed"),y())),n.target!==s.children[0]&&n.target!==s.children[1]&&n.target!==s.children[2]&&n.target!==s.children[3]||(g(),p())})}(),function(){const e=document.getElementById("sunny"),t=document.getElementById("rainy"),n=document.getElementById("foggy"),d=document.getElementById("thunder"),i=(document.getElementById("video-source"),document.getElementById("video"));document.addEventListener("click",o=>{o.target==e&&(i.src="images/sunny.mp4"),o.target==t&&(i.src="images/rainy.mp4"),o.target==n&&(i.src="images/foggy.mp4"),o.target==d&&(i.src="images/thunder.mp4")})}(),function(){const e="d6e7fd6926ec77363ffce0e10bfe83b3",t=(document.getElementById("cards"),document.getElementById("cards-info"),document.getElementById("info-details"),document.getElementById("info-title"),document.getElementById("input")),n=(document.getElementsByClassName("info__daily-info"),document.getElementById("button")),d=document.getElementById("search-icon"),i=t=>{var n;t&&fetch((n=t,`https://api.openweathermap.org/data/2.5/weather?q=${n}&units=celsius&appid=${e}`)).then(e=>e.json()).then(e=>{(e=>{const t=document.getElementById("city-name"),n=e.name,d=e.sys.country,i=document.getElementById("temperature"),o=Math.round(e.main.temp-273.15),s=document.getElementById("humidity-info"),m=e.main.humidity,c=document.getElementById("pressure-info"),r=e.main.pressure,a=(e.weather[0].main,document.getElementById("wind-dir-info")),u=e.wind.deg,l=document.getElementById("wind-speed-info"),g=e.wind.speed,y=document.getElementById("weather-icon-big"),p=`https://openweathermap.org/img/wn/${e.weather[0].icon}@2x.png`;t.innerText=`${n}, ${d}`,null==d&&(t.innerText=""+n),i.innerHTML=o+" &deg;",y.setAttribute("src",p),s.innerText=`Humidity:  ${m}%`,c.innerText=`Pressure: ${r} hPa`,a.innerText=`Wind Direction: ${u} deg`,l.innerText=`Wind Speed: ${g} mps`})(e)}).catch(e=>{console.log(e);document.getElementById("city-name").innerText=`"${t}" - is wrong City name!`})},o=t=>{var n;t&&fetch((n=t,`https://api.openweathermap.org/data/2.5/forecast?q=${n}&units=celsius&appid=${e}`)).then(e=>e.json()).then(e=>{console.log(e)}).catch(e=>{console.log(e);document.getElementById("city-name").innerText=`"${t}" - is wrong City name!`})};document.addEventListener("click",e=>{e.target!=n&&e.target!=d||(i(t.value.toLowerCase()),o(t.value.toLowerCase()))}),document.addEventListener("keypress",e=>{e.target==t&&"Enter"==e.code&&(i(t.value.toLowerCase()),o(t.value.toLowerCase()))})}()}();

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsInNvdXJjZXMiOlsic3JjL2pzL3NjcmlwdHMvdmlkZW8uanMiLCJzcmMvanMvc2NyaXB0cy9idXJnZXIuanMiLCJzcmMvanMvbWFpbi5qcyIsInNyYy9qcy9zY3JpcHRzL2JnLmpzIiwic3JjL2pzL3NjcmlwdHMvYXBpLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHNsb3dWaWRlbygpIHtcclxuICBjb25zdCBwbGF5ZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInZpZGVvXCIpO1xyXG4gIHBsYXllci5wbGF5YmFja1JhdGUgPSAwLjQ7XHJcbn1cclxuIiwiXCJ1c2Ugc3RyaWN0XCI7XHJcbmV4cG9ydCBmdW5jdGlvbiB1c2VCdXJnZXJNZW51KCkge1xyXG4gIGNvbnN0ICRidXJnZXJCdG4gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImJ1cmdlclwiKTtcclxuICBjb25zdCAkYnVyZ2VyU3RyaXBlcyA9ICRidXJnZXJCdG4uY2hpbGRyZW47XHJcbiAgY29uc3QgJGJ1cmdlck1lbnUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImJ1cmdlci1tZW51XCIpO1xyXG4gIGNvbnN0ICRmaXJzdFN0cmlwZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZmlyc3Qtc3RyaXBlXCIpO1xyXG4gIGNvbnN0ICRzZWNvbmRTdHJpcGUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInNlY29uZC1zdHJpcGVcIik7XHJcbiAgY29uc3QgJHRoaXJkU3RyaXBlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ0aGlyZC1zdHJpcGVcIik7XHJcbiAgY29uc3QgJGJ1cmdlck1lbnVMaXN0SXRlbXMgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm1lbnUtbGlzdFwiKTtcclxuICBsZXQgdG9wQ291bnRlciA9IC00MDtcclxuICBsZXQgcmlnaHRDb3VudGVyID0gNDA7XHJcbiAgbGV0IGNvdW50ID0gOTA7XHJcblxyXG4gIGZ1bmN0aW9uIGNoYW5nZVZpc2liaWxpdHlUb2hpZGRlbigpIHtcclxuICAgICRidXJnZXJNZW51LnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcclxuICB9XHJcbiAgZnVuY3Rpb24gY2hhbmdlVmlzaWJpbGl0eVRvVmlzaWJsZSgpIHtcclxuICAgICRidXJnZXJNZW51LnN0eWxlLmRpc3BsYXkgPSBcImZsZXhcIjtcclxuICB9XHJcbiAgZnVuY3Rpb24gcmV0dXJuRGlyZWN0aW9uKCkge1xyXG4gICAgdG9wQ291bnRlciA9IC00MDtcclxuICAgIHJpZ2h0Q291bnRlciA9IDQwO1xyXG4gICAgJGJ1cmdlck1lbnUuc3R5bGUudG9wID0gYCR7dG9wQ291bnRlcn1weGA7XHJcbiAgICAkYnVyZ2VyTWVudS5zdHlsZS5yaWdodCA9IGAke3JpZ2h0Q291bnRlcn1weGA7XHJcbiAgfVxyXG5cclxuICBmdW5jdGlvbiBtb3ZlVG9wKCkge1xyXG4gICAgaWYgKGNvdW50ID09IC00MCkge1xyXG4gICAgICByZXR1cm4gKGNvdW50ID0gOTApO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgJGJ1cmdlck1lbnUuc3R5bGUudG9wID0gYCR7KGNvdW50IC09IDUpfXB4YDtcclxuICAgIH1cclxuICAgIHNldFRpbWVvdXQobW92ZVRvcCwgMSk7XHJcbiAgfVxyXG5cclxuICBmdW5jdGlvbiBhbmltYXRlTWVudUJhY2soKSB7XHJcbiAgICBtb3ZlVG9wKCk7XHJcbiAgICBzZXRUaW1lb3V0KGNoYW5nZVZpc2liaWxpdHlUb2hpZGRlbiwgNTApO1xyXG4gICAgc2V0VGltZW91dChyZXR1cm5EaXJlY3Rpb24sIDUwMCk7XHJcbiAgfVxyXG5cclxuICBmdW5jdGlvbiBhbmltYXRlTWVudUZvcndhcmQoKSB7XHJcbiAgICBjaGFuZ2VWaXNpYmlsaXR5VG9WaXNpYmxlKCk7XHJcbiAgICBpZiAocmlnaHRDb3VudGVyID09IDM2MCkgcmV0dXJuIHRydWU7XHJcbiAgICBpZiAodG9wQ291bnRlciA8IDkwICYmIHJpZ2h0Q291bnRlciA9PSA0MCkge1xyXG4gICAgICAkYnVyZ2VyTWVudS5zdHlsZS50b3AgPSBgJHsodG9wQ291bnRlciArPSAxMCl9cHhgO1xyXG4gICAgfVxyXG4gICAgaWYgKHRvcENvdW50ZXIgPT0gOTAgJiYgcmlnaHRDb3VudGVyIDwgMzYwKSB7XHJcbiAgICAgICRidXJnZXJNZW51LnN0eWxlLnJpZ2h0ID0gYCR7KHJpZ2h0Q291bnRlciArPSAxMCl9cHhgO1xyXG4gICAgfVxyXG4gICAgc2V0VGltZW91dChhbmltYXRlTWVudUZvcndhcmQsIDUpO1xyXG4gIH1cclxuXHJcbiAgZnVuY3Rpb24gcmVtb3ZlU3RyaXBlc0NoYW5nZXMoKSB7XHJcbiAgICAkZmlyc3RTdHJpcGUuY2xhc3NMaXN0LnJlbW92ZShcInB1c2hlZFwiKTtcclxuICAgICRzZWNvbmRTdHJpcGUuY2xhc3NMaXN0LnJlbW92ZShcInB1c2hlZFwiKTtcclxuICAgICR0aGlyZFN0cmlwZS5jbGFzc0xpc3QucmVtb3ZlKFwicHVzaGVkXCIpO1xyXG4gIH1cclxuICBmdW5jdGlvbiBhZGRTdHJpcGVDaGFuZ2VzKCkge1xyXG4gICAgJGZpcnN0U3RyaXBlLmNsYXNzTGlzdC5hZGQoXCJwdXNoZWRcIik7XHJcbiAgICAkc2Vjb25kU3RyaXBlLmNsYXNzTGlzdC5hZGQoXCJwdXNoZWRcIik7XHJcbiAgICAkdGhpcmRTdHJpcGUuY2xhc3NMaXN0LmFkZChcInB1c2hlZFwiKTtcclxuICB9XHJcblxyXG4gIGNvbnN0IHVzZUJ1cmdlciA9ICgpID0+IHtcclxuICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoZXZlbnQpID0+IHtcclxuICAgICAgaWYgKFxyXG4gICAgICAgIGV2ZW50LnRhcmdldCA9PT0gJGJ1cmdlckJ0biB8fFxyXG4gICAgICAgIGV2ZW50LnRhcmdldCA9PT0gJGJ1cmdlclN0cmlwZXNbMF0gfHxcclxuICAgICAgICBldmVudC50YXJnZXQgPT09ICRidXJnZXJTdHJpcGVzWzFdIHx8XHJcbiAgICAgICAgZXZlbnQudGFyZ2V0ID09PSAkYnVyZ2VyU3RyaXBlc1syXVxyXG4gICAgICApIHtcclxuICAgICAgICBpZiAoJGZpcnN0U3RyaXBlLmNsYXNzTGlzdFsxXSA9PSBcInB1c2hlZFwiKSB7XHJcbiAgICAgICAgICByZW1vdmVTdHJpcGVzQ2hhbmdlcygpO1xyXG4gICAgICAgICAgYW5pbWF0ZU1lbnVCYWNrKCk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIGFkZFN0cmlwZUNoYW5nZXMoKTtcclxuICAgICAgICAgIGFuaW1hdGVNZW51Rm9yd2FyZCgpO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG5cclxuICAgICAgaWYgKFxyXG4gICAgICAgIGV2ZW50LnRhcmdldCA9PT0gJGJ1cmdlck1lbnVMaXN0SXRlbXMuY2hpbGRyZW5bMF0gfHxcclxuICAgICAgICBldmVudC50YXJnZXQgPT09ICRidXJnZXJNZW51TGlzdEl0ZW1zLmNoaWxkcmVuWzFdIHx8XHJcbiAgICAgICAgZXZlbnQudGFyZ2V0ID09PSAkYnVyZ2VyTWVudUxpc3RJdGVtcy5jaGlsZHJlblsyXSB8fFxyXG4gICAgICAgIGV2ZW50LnRhcmdldCA9PT0gJGJ1cmdlck1lbnVMaXN0SXRlbXMuY2hpbGRyZW5bM11cclxuICAgICAgKSB7XHJcbiAgICAgICAgYW5pbWF0ZU1lbnVCYWNrKCk7XHJcbiAgICAgICAgcmVtb3ZlU3RyaXBlc0NoYW5nZXMoKTtcclxuICAgICAgfVxyXG4gICAgfSk7XHJcbiAgfTtcclxuICB1c2VCdXJnZXIoKTtcclxufVxyXG4iLCJcInVzZSBzdHJpY3RcIjtcclxuaW1wb3J0IHsgdXNlQnVyZ2VyTWVudSB9IGZyb20gXCIuL3NjcmlwdHMvYnVyZ2VyXCI7XHJcbmltcG9ydCB7IHNsb3dWaWRlbyB9IGZyb20gXCIuL3NjcmlwdHMvdmlkZW9cIjtcclxuaW1wb3J0IHsgY2hhbmdlQkcgfSBmcm9tIFwiLi9zY3JpcHRzL2JnXCI7XHJcbmltcG9ydCB7IGdldFJlc3BvbnNlIH0gZnJvbSBcIi4vc2NyaXB0cy9hcGlcIjtcclxuc2xvd1ZpZGVvKCk7XHJcbnVzZUJ1cmdlck1lbnUoKTtcclxuY2hhbmdlQkcoKTtcclxuZ2V0UmVzcG9uc2UoKTtcclxuIiwiXCJ1c2Ugc3RyaWN0XCI7XHJcbmV4cG9ydCBmdW5jdGlvbiBjaGFuZ2VCRygpIHtcclxuICBjb25zdCAkYnV0dG9uU3VubnkgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInN1bm55XCIpO1xyXG4gIGNvbnN0ICRidXR0b25SYWlueSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwicmFpbnlcIik7XHJcbiAgY29uc3QgJGJ1dHRvbkZvZ2d5ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJmb2dneVwiKTtcclxuICBjb25zdCAkYnV0dG9uVGh1bmRlciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidGh1bmRlclwiKTtcclxuICBjb25zdCAkdmlkZW9Tb3VyY2UgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInZpZGVvLXNvdXJjZVwiKTtcclxuICBjb25zdCAkdmlkZW8gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInZpZGVvXCIpO1xyXG4gIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoZXZlbnQpID0+IHtcclxuICAgIGlmIChldmVudC50YXJnZXQgPT0gJGJ1dHRvblN1bm55KSB7XHJcbiAgICAgICR2aWRlby5zcmMgPSBcImltYWdlcy9zdW5ueS5tcDRcIjtcclxuICAgIH1cclxuICAgIGlmIChldmVudC50YXJnZXQgPT0gJGJ1dHRvblJhaW55KSB7XHJcbiAgICAgICR2aWRlby5zcmMgPSBcImltYWdlcy9yYWlueS5tcDRcIjtcclxuICAgIH1cclxuICAgIGlmIChldmVudC50YXJnZXQgPT0gJGJ1dHRvbkZvZ2d5KSB7XHJcbiAgICAgICR2aWRlby5zcmMgPSBcImltYWdlcy9mb2dneS5tcDRcIjtcclxuICAgIH1cclxuICAgIGlmIChldmVudC50YXJnZXQgPT0gJGJ1dHRvblRodW5kZXIpIHtcclxuICAgICAgJHZpZGVvLnNyYyA9IFwiaW1hZ2VzL3RodW5kZXIubXA0XCI7XHJcbiAgICB9XHJcbiAgfSk7XHJcbn1cclxuIiwiXCJ1c2Ugc3RyaWN0XCI7XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gZ2V0UmVzcG9uc2UoKSB7XHJcbiAgY29uc3QgQVBJX0tFWSA9IFwiZDZlN2ZkNjkyNmVjNzczNjNmZmNlMGUxMGJmZTgzYjNcIjtcclxuICBjb25zdCBCQVNFX1VSTCA9IGBodHRwczovL2FwaS5vcGVud2VhdGhlcm1hcC5vcmcvZGF0YS8yLjUvd2VhdGhlcj9xPWA7XHJcbiAgY29uc3QgU0VDT05EQVJZX1VSTCA9IGBodHRwczovL2FwaS5vcGVud2VhdGhlcm1hcC5vcmcvZGF0YS8yLjUvZm9yZWNhc3Q/cT1gO1xyXG5cclxuICBjb25zdCAkY2FyZHMgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImNhcmRzXCIpO1xyXG4gIGNvbnN0ICRjYXJkc0luZm8gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImNhcmRzLWluZm9cIik7XHJcbiAgY29uc3QgJGluZm9EZXRhaWxzID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJpbmZvLWRldGFpbHNcIik7XHJcbiAgY29uc3QgJGluZm9UaXRsZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiaW5mby10aXRsZVwiKTtcclxuICBjb25zdCAkaW5wdXQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImlucHV0XCIpO1xyXG4gIGNvbnN0IGRhaWx5SW5mb0l0ZW1zID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcImluZm9fX2RhaWx5LWluZm9cIik7XHJcbiAgY29uc3QgJHNlYXJjaEJ1dHRvbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiYnV0dG9uXCIpO1xyXG4gIGNvbnN0ICRzZWFyY2hJY29uID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJzZWFyY2gtaWNvblwiKTtcclxuXHJcbiAgY29uc3QgZ2V0U2VhcmNoVXJsID0gKGNpdHkpID0+IHtcclxuICAgIHJldHVybiBgJHtCQVNFX1VSTH0ke2NpdHl9JnVuaXRzPWNlbHNpdXMmYXBwaWQ9JHtBUElfS0VZfWA7XHJcbiAgfTtcclxuXHJcbiAgY29uc3QgZ2V0U2VhcmNoVXJsRm9yRGF5cyA9IChjaXR5KSA9PiB7XHJcbiAgICByZXR1cm4gYCR7U0VDT05EQVJZX1VSTH0ke2NpdHl9JnVuaXRzPWNlbHNpdXMmYXBwaWQ9JHtBUElfS0VZfWA7XHJcbiAgfTtcclxuICBjb25zdCBzaG93V2VhdGhlckluZm8gPSAoZGF0YSkgPT4ge1xyXG4gICAgY29uc3QgJGNpdHlOYW1lID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJjaXR5LW5hbWVcIik7XHJcbiAgICBjb25zdCBjaXR5TmFtZSA9IGRhdGEubmFtZTtcclxuICAgIGNvbnN0IGNpdHlDb3VudHJ5ID0gZGF0YS5zeXMuY291bnRyeTtcclxuICAgIGNvbnN0ICR0ZW1wZXJhdHVyZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidGVtcGVyYXR1cmVcIik7XHJcbiAgICBjb25zdCBjdXJyZW50VGVtcCA9IE1hdGgucm91bmQoZGF0YS5tYWluLnRlbXAgLSAyNzMuMTUpO1xyXG4gICAgY29uc3QgJGh1bWlkaXR5SW5mbyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiaHVtaWRpdHktaW5mb1wiKTtcclxuICAgIGNvbnN0IGh1bWlkaXR5ID0gZGF0YS5tYWluLmh1bWlkaXR5O1xyXG4gICAgY29uc3QgJHByZXNzdXJlSW5mbyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwicHJlc3N1cmUtaW5mb1wiKTtcclxuICAgIGNvbnN0IHByZXNzdXJlID0gZGF0YS5tYWluLnByZXNzdXJlO1xyXG4gICAgY29uc3QgY3VycmVudFdlYXRoZXIgPSBkYXRhLndlYXRoZXJbMF0ubWFpbjtcclxuICAgIGNvbnN0ICR3aW5kRGlySW5mbyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwid2luZC1kaXItaW5mb1wiKTtcclxuICAgIGNvbnN0IHdpbmREaXJlY3Rpb24gPSBkYXRhLndpbmQuZGVnO1xyXG4gICAgY29uc3QgJHdpbmRTcGVlZEluZm8gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIndpbmQtc3BlZWQtaW5mb1wiKTtcclxuICAgIGNvbnN0IHdpbmRTcGVlZCA9IGRhdGEud2luZC5zcGVlZDtcclxuICAgIGNvbnN0ICR3ZWF0aGVySWNvbkJpZyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwid2VhdGhlci1pY29uLWJpZ1wiKTtcclxuICAgIGNvbnN0IGljb24gPSBgaHR0cHM6Ly9vcGVud2VhdGhlcm1hcC5vcmcvaW1nL3duLyR7ZGF0YS53ZWF0aGVyWzBdLmljb259QDJ4LnBuZ2A7XHJcbiAgICAkY2l0eU5hbWUuaW5uZXJUZXh0ID0gYCR7Y2l0eU5hbWV9LCAke2NpdHlDb3VudHJ5fWA7XHJcbiAgICBpZiAoY2l0eUNvdW50cnkgPT0gdW5kZWZpbmVkKSB7XHJcbiAgICAgICRjaXR5TmFtZS5pbm5lclRleHQgPSBgJHtjaXR5TmFtZX1gO1xyXG4gICAgfVxyXG4gICAgJHRlbXBlcmF0dXJlLmlubmVySFRNTCA9IGAke2N1cnJlbnRUZW1wfSAmZGVnO2A7XHJcbiAgICAkd2VhdGhlckljb25CaWcuc2V0QXR0cmlidXRlKFwic3JjXCIsIGljb24pO1xyXG4gICAgJGh1bWlkaXR5SW5mby5pbm5lclRleHQgPSBgSHVtaWRpdHk6ICAke2h1bWlkaXR5fSVgO1xyXG4gICAgJHByZXNzdXJlSW5mby5pbm5lclRleHQgPSBgUHJlc3N1cmU6ICR7cHJlc3N1cmV9IGhQYWA7XHJcbiAgICAkd2luZERpckluZm8uaW5uZXJUZXh0ID0gYFdpbmQgRGlyZWN0aW9uOiAke3dpbmREaXJlY3Rpb259IGRlZ2A7XHJcbiAgICAkd2luZFNwZWVkSW5mby5pbm5lclRleHQgPSBgV2luZCBTcGVlZDogJHt3aW5kU3BlZWR9IG1wc2A7XHJcbiAgfTtcclxuXHJcbiAgY29uc3QgZ2V0UmVzcG9uc2UgPSAocXVlcnkpID0+IHtcclxuICAgIGlmIChxdWVyeSkge1xyXG4gICAgICBmZXRjaChnZXRTZWFyY2hVcmwocXVlcnkpKVxyXG4gICAgICAgIC50aGVuKChyZXMpID0+IHJlcy5qc29uKCkpXHJcbiAgICAgICAgLnRoZW4oKGRhdGEpID0+IHtcclxuICAgICAgICAgIHNob3dXZWF0aGVySW5mbyhkYXRhKTtcclxuICAgICAgICB9KVxyXG4gICAgICAgIC5jYXRjaCgoZXJyKSA9PiB7XHJcbiAgICAgICAgICBjb25zb2xlLmxvZyhlcnIpO1xyXG4gICAgICAgICAgY29uc3QgJGNpdHlOYW1lID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJjaXR5LW5hbWVcIik7XHJcbiAgICAgICAgICAkY2l0eU5hbWUuaW5uZXJUZXh0ID0gYFwiJHtxdWVyeX1cIiAtIGlzIHdyb25nIENpdHkgbmFtZSFgO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG4gIH07XHJcbiAgY29uc3QgZ2V0UmVzcG9uc2VGb3JEYXlzID0gKHF1ZXJ5KSA9PiB7XHJcbiAgICBpZiAocXVlcnkpIHtcclxuICAgICAgZmV0Y2goZ2V0U2VhcmNoVXJsRm9yRGF5cyhxdWVyeSkpXHJcbiAgICAgICAgLnRoZW4oKHJlcykgPT4gcmVzLmpzb24oKSlcclxuICAgICAgICAudGhlbigoZGF0YSkgPT4ge1xyXG4gICAgICAgICAgY29uc29sZS5sb2coZGF0YSk7XHJcbiAgICAgICAgfSlcclxuICAgICAgICAuY2F0Y2goKGVycikgPT4ge1xyXG4gICAgICAgICAgY29uc29sZS5sb2coZXJyKTtcclxuICAgICAgICAgIGNvbnN0ICRjaXR5TmFtZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiY2l0eS1uYW1lXCIpO1xyXG4gICAgICAgICAgJGNpdHlOYW1lLmlubmVyVGV4dCA9IGBcIiR7cXVlcnl9XCIgLSBpcyB3cm9uZyBDaXR5IG5hbWUhYDtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuICB9O1xyXG5cclxuICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKGV2ZW50KSA9PiB7XHJcbiAgICBpZiAoZXZlbnQudGFyZ2V0ID09ICRzZWFyY2hCdXR0b24gfHwgZXZlbnQudGFyZ2V0ID09ICRzZWFyY2hJY29uKSB7XHJcbiAgICAgIGdldFJlc3BvbnNlKCRpbnB1dC52YWx1ZS50b0xvd2VyQ2FzZSgpKTtcclxuICAgICAgZ2V0UmVzcG9uc2VGb3JEYXlzKCRpbnB1dC52YWx1ZS50b0xvd2VyQ2FzZSgpKTtcclxuICAgIH1cclxuICB9KTtcclxuICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwia2V5cHJlc3NcIiwgKGV2ZW50KSA9PiB7XHJcbiAgICBpZiAoZXZlbnQudGFyZ2V0ID09ICRpbnB1dCAmJiBldmVudC5jb2RlID09IFwiRW50ZXJcIikge1xyXG4gICAgICBnZXRSZXNwb25zZSgkaW5wdXQudmFsdWUudG9Mb3dlckNhc2UoKSk7XHJcbiAgICAgIGdldFJlc3BvbnNlRm9yRGF5cygkaW5wdXQudmFsdWUudG9Mb3dlckNhc2UoKSk7XHJcbiAgICB9XHJcbiAgfSk7XHJcbn1cclxuIl0sIm5hbWVzIjpbImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJwbGF5YmFja1JhdGUiLCIkYnVyZ2VyQnRuIiwiJGJ1cmdlclN0cmlwZXMiLCJjaGlsZHJlbiIsIiRidXJnZXJNZW51IiwiJGZpcnN0U3RyaXBlIiwiJHNlY29uZFN0cmlwZSIsIiR0aGlyZFN0cmlwZSIsIiRidXJnZXJNZW51TGlzdEl0ZW1zIiwidG9wQ291bnRlciIsInJpZ2h0Q291bnRlciIsImNvdW50IiwiY2hhbmdlVmlzaWJpbGl0eVRvaGlkZGVuIiwic3R5bGUiLCJkaXNwbGF5IiwicmV0dXJuRGlyZWN0aW9uIiwidG9wIiwicmlnaHQiLCJtb3ZlVG9wIiwic2V0VGltZW91dCIsImFuaW1hdGVNZW51QmFjayIsImFuaW1hdGVNZW51Rm9yd2FyZCIsInJlbW92ZVN0cmlwZXNDaGFuZ2VzIiwiY2xhc3NMaXN0IiwicmVtb3ZlIiwiYWRkRXZlbnRMaXN0ZW5lciIsImV2ZW50IiwidGFyZ2V0IiwiYWRkIiwidXNlQnVyZ2VyTWVudSIsIiRidXR0b25TdW5ueSIsIiRidXR0b25SYWlueSIsIiRidXR0b25Gb2dneSIsIiRidXR0b25UaHVuZGVyIiwiJHZpZGVvIiwic3JjIiwiY2hhbmdlQkciLCJBUElfS0VZIiwiJGlucHV0IiwiJHNlYXJjaEJ1dHRvbiIsImdldEVsZW1lbnRzQnlDbGFzc05hbWUiLCIkc2VhcmNoSWNvbiIsImdldFJlc3BvbnNlIiwicXVlcnkiLCJjaXR5IiwiZmV0Y2giLCJ0aGVuIiwicmVzIiwianNvbiIsImRhdGEiLCIkY2l0eU5hbWUiLCJjaXR5TmFtZSIsIm5hbWUiLCJjaXR5Q291bnRyeSIsInN5cyIsImNvdW50cnkiLCIkdGVtcGVyYXR1cmUiLCJjdXJyZW50VGVtcCIsIk1hdGgiLCJyb3VuZCIsIm1haW4iLCJ0ZW1wIiwiJGh1bWlkaXR5SW5mbyIsImh1bWlkaXR5IiwiJHByZXNzdXJlSW5mbyIsInByZXNzdXJlIiwiJHdpbmREaXJJbmZvIiwid2VhdGhlciIsIndpbmREaXJlY3Rpb24iLCJ3aW5kIiwiZGVnIiwiJHdpbmRTcGVlZEluZm8iLCJ3aW5kU3BlZWQiLCJzcGVlZCIsIiR3ZWF0aGVySWNvbkJpZyIsImljb24iLCJpbm5lclRleHQiLCJ1bmRlZmluZWQiLCJpbm5lckhUTUwiLCJzZXRBdHRyaWJ1dGUiLCJzaG93V2VhdGhlckluZm8iLCJjYXRjaCIsImVyciIsImNvbnNvbGUiLCJsb2ciLCJnZXRSZXNwb25zZUZvckRheXMiLCJ2YWx1ZSIsInRvTG93ZXJDYXNlIiwiY29kZSJdLCJtYXBwaW5ncyI6InlCQUdpQkEsU0FBU0MsZUFBZSxTQUNoQ0MsYUFBZSxHQ0hqQixpQkFDQ0MsRUFBYUgsU0FBU0MsZUFBZSxVQUNyQ0csRUFBaUJELEVBQVdFLFNBQzVCQyxFQUFjTixTQUFTQyxlQUFlLGVBQ3RDTSxFQUFlUCxTQUFTQyxlQUFlLGdCQUN2Q08sRUFBZ0JSLFNBQVNDLGVBQWUsaUJBQ3hD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

(function () {
  'use strict';

  function useBurgerMenu() {
    const $burgerBtn = document.getElementById("burger");
    const $burgerStripes = $burgerBtn.children;
    const $burgerMenu = document.getElementById("burger-menu");
    const $firstStripe = document.getElementById("first-stripe");
    const $secondStripe = document.getElementById("second-stripe");
    const $thirdStripe = document.getElementById("third-stripe");
    const $burgerMenuListItems = document.getElementById("menu-list");
    let topCounter = -40;
    let rightCounter = 40;
    let count = 90;

    function changeVisibilityTohidden() {
      $burgerMenu.style.display = "none";
    }

    function changeVisibilityToVisible() {
      $burgerMenu.style.display = "flex";
    }

    function returnDirection() {
      topCounter = -40;
      rightCounter = 40;
      $burgerMenu.style.top = `${topCounter}px`;
      $burgerMenu.style.right = `${rightCounter}px`;
    }

    function moveTop() {
      if (count == -40) {
        return count = 90;
      } else {
        $burgerMenu.style.top = `${count -= 5}px`;
      }

      setTimeout(moveTop, 1);
    }

    function animateMenuBack() {
      moveTop();
      setTimeout(changeVisibilityTohidden, 50);
      setTimeout(returnDirection, 500);
    }

    function animateMenuForward() {
      changeVisibilityToVisible();
      if (rightCounter == 360) return true;

      if (topCounter < 90 && rightCounter == 40) {
        $burgerMenu.style.top = `${topCounter += 10}px`;
      }

      if (topCounter == 90 && rightCounter < 360) {
        $burgerMenu.style.right = `${rightCounter += 10}px`;
      }

      setTimeout(animateMenuForward, 5);
    }

    function removeStripesChanges() {
      $firstStripe.classList.remove("pushed");
      $secondStripe.classList.remove("pushed");
      $thirdStripe.classList.remove("pushed");
    }

    function addStripeChanges() {
      $firstStripe.classList.add("pushed");
      $secondStripe.classList.add("pushed");
      $thirdStripe.classList.add("pushed");
    }

    const useBurger = () => {
      document.addEventListener("click", event => {
        if (event.target === $burgerBtn || event.target === $burgerStripes[0] || event.target === $burgerStripes[1] || event.target === $burgerStripes[2]) {
          if ($firstStripe.classList[1] == "pushed") {
            removeStripesChanges();
            animateMenuBack();
          } else {
            addStripeChanges();
            animateMenuForward();
          }
        }

        if (event.target === $burgerMenuListItems.children[0] || event.target === $burgerMenuListItems.children[1] || event.target === $burgerMenuListItems.children[2] || event.target === $burgerMenuListItems.children[3]) {
          animateMenuBack();
          removeStripesChanges();
        }
      });
    };

    useBurger();
  }

  function slowVideo() {
    const player = document.getElementById("video");
    player.playbackRate = 0.4;
  }

  function changeBG() {
    const $buttonSunny = document.getElementById("sunny");
    const $buttonRainy = document.getElementById("rainy");
    const $buttonFoggy = document.getElementById("foggy");
    const $buttonThunder = document.getElementById("thunder");
    const $videoSource = document.getElementById("video-source");
    const $video = document.getElementById("video");
    document.addEventListener("click", event => {
      if (event.target == $buttonSunny) {
        $video.src = "images/sunny.mp4";
      }

      if (event.target == $buttonRainy) {
        $video.src = "images/rainy.mp4";
      }

      if (event.target == $buttonFoggy) {
        $video.src = "images/foggy.mp4";
      }

      if (event.target == $buttonThunder) {
        $video.src = "images/thunder.mp4";
      }
    });
  }

  function getResponse() {
    const API_KEY = "d6e7fd6926ec77363ffce0e10bfe83b3";
    const BASE_URL = `http://api.openweathermap.org/data/2.5/weather?q=`;
    const SECONDARY_URL = `http://api.openweathermap.org/data/2.5/forecast?q=`;
    const $cards = document.getElementById("cards");
    const $cardsInfo = document.getElementById("cards-info");
    const $infoDetails = document.getElementById("info-details");
    const $infoTitle = document.getElementById("info-title");
    const $input = document.getElementById("input");
    const dailyInfoItems = document.getElementsByClassName("info__daily-info");
    const $searchButton = document.getElementById("button");
    const $searchIcon = document.getElementById("search-icon");

    const getSearchUrl = city => {
      return `${BASE_URL}${city}&units=celsius&appid=${API_KEY}`;
    };

    const getSearchUrlForDays = city => {
      return `${SECONDARY_URL}${city}&units=celsius&appid=${API_KEY}`;
    };

    const showWeatherInfo = data => {
      const $cityName = document.getElementById("city-name");
      const cityName = data.name;
      const cityCountry = data.sys.country;
      const $temperature = document.getElementById("temperature");
      const currentTemp = Math.round(data.main.temp - 273.15);
      const $humidityInfo = document.getElementById("humidity-info");
      const humidity = data.main.humidity;
      const $pressureInfo = document.getElementById("pressure-info");
      const pressure = data.main.pressure;
      const currentWeather = data.weather[0].main;
      const $windDirInfo = document.getElementById("wind-dir-info");
      const windDirection = data.wind.deg;
      const $windSpeedInfo = document.getElementById("wind-speed-info");
      const windSpeed = data.wind.speed;
      const $weatherIconBig = document.getElementById("weather-icon-big");
      const icon = `https://openweathermap.org/img/wn/${data.weather[0].icon}@2x.png`;
      $cityName.innerText = `${cityName}, ${cityCountry}`;

      if (cityCountry == undefined) {
        $cityName.innerText = `${cityName}`;
      }

      $temperature.innerHTML = `${currentTemp} &deg;`;
      $weatherIconBig.setAttribute("src", icon);
      $humidityInfo.innerText = `Humidity:  ${humidity}%`;
      $pressureInfo.innerText = `Pressure: ${pressure} hPa`;
      $windDirInfo.innerText = `Wind Direction: ${windDirection} deg`;
      $windSpeedInfo.innerText = `Wind Speed: ${windSpeed} mps`;
    };

    const getResponse = query => {
      if (query) {
        fetch(getSearchUrl(query)).then(res => res.json()).then(data => {
          showWeatherInfo(data);
        }).catch(err => {
          console.log(err);
          const $cityName = document.getElementById("city-name");
          $cityName.innerText = `"${query}" - is wrong City name!`;
        });
      }
    };

    const getResponseForDays = query => {
      if (query) {
        fetch(getSearchUrlForDays(query)).then(res => res.json()).then(data => {
          console.log(data);
        }).catch(err => {
          console.log(err);
          const $cityName = document.getElementById("city-name");
          $cityName.innerText = `"${query}" - is wrong City name!`;
        });
      }
    };

    document.addEventListener("click", event => {
      if (event.target == $searchButton || event.target == $searchIcon) {
        getResponse($input.value.toLowerCase());
        getResponseForDays($input.value.toLowerCase());
      }
    });
    document.addEventListener("keypress", event => {
      if (event.target == $input && event.code == "Enter") {
        getResponse($input.value.toLowerCase());
        getResponseForDays($input.value.toLowerCase());
      }
    });
  }

  slowVideo();
  useBurgerMenu();
  changeBG();
  getResponse();

}());

//# sourceMappingURL=data:application/json;charset=utf8;base64,
